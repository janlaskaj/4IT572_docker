name: deploy e-shop

on:
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  # Install all dependencies
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SECRET_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node_modules-

      - name: Install with npm
        run: npm ci
  build:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SECRET_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: build
        run: |
          npm rebuild node-sass --force
          npm run build -- --colors

      - name: Cache node modules and build for deploy
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ./node_modules
            ./build
          key: ${{ runner.os }}-build-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-build-${{ github.run_id }}

  test:
    needs: Install
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SECRET_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 10

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}

      - name: Test
        run: npm run test

  deploy:
    # needs: [build, test]
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SECRET_TOKEN }}

      - name: set-up deployment
        run: |
          pip3 install ansible==4.0 boto boto3
          ls -la
          touch ansible/devops.pem
          touch vault_pass.txt
          echo "$VAULT_PASS" > vault_pass.txt
          ls -la ansible/
          echo "$SSH_KEY" > ansible/devops.pem
          chmod 400 ansible/devops.pem
          export ANSIBLE_HOST_KEY_CHECKING=False
          cat ansible/devops.pem
          ssh-keygen -l -f ansible/devops.pem
          ansible-playbook ansible/ec2_deploy.yml --user ec2-user --key-file ansible/devops.pem --verbose --vault-password-file vault_pass.txt
        env:
          SSH_KEY: ${{secrets.PEM_KEY}}
          VAULT_PASS: ${{secrets.VAULT_PASS}}
